{"ast":null,"code":"var _jsxFileName = \"/Users/ssutthiboriban/Desktop/cs411/cs411/fa24-cs411-team033-TT/client/src/Calendar.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/Calendar.css';\nimport logo from \"./logo.png\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Calendar = () => {\n  _s();\n  const [currentYear, setCurrentYear] = useState(2025); // State for the year\n  const [currentMonth, setCurrentMonth] = useState(9); // State for the month (October is 9)\n\n  // Helper function to get the number of days in the current month\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n  // Get the day of the week for the first day of the month\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\n\n  // Create calendar days (placeholders for empty cells and actual days)\n  const calendarDays = [];\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push({\n      date: null\n    }); // Empty placeholder\n  }\n  for (let i = 1; i <= daysInMonth; i++) {\n    calendarDays.push({\n      date: i\n    });\n  }\n\n  // Handle navigation to the next month\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0); // Go to January\n      setCurrentYear(currentYear + 1); // Increment the year\n    } else {\n      setCurrentMonth(currentMonth + 1); // Go to the next month\n    }\n  };\n\n  // Handle navigation to the previous month\n  const handlePrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11); // Go to December\n      setCurrentYear(currentYear - 1); // Decrement the year\n    } else {\n      setCurrentMonth(currentMonth - 1); // Go to the previous month\n    }\n  };\n\n  // Format the current month and year for display\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n  const currentMonthName = monthNames[currentMonth];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"closet-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"closet-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        className: \"logo\",\n        src: logo,\n        alt: \"logo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"nav\", {\n        className: \"navigation\",\n        children: /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"nav-item\",\n          children: \"today outfit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-header\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: handlePrevMonth,\n        children: \"\\u25C0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: [currentMonthName, \" \", currentYear]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"nav-button\",\n        onClick: handleNextMonth,\n        children: \"\\u25B6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"calendar-grid\",\n      children: [['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map(day => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"calendar-day-name\",\n        children: day\n      }, day, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)), calendarDays.map((day, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `calendar-day ${day.date ? '' : 'placeholder'}`,\n        children: day.date\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(Calendar, \"qGwnqfp/zW+Yws6aK5Q/1Ig58xU=\");\n_c = Calendar;\nexport default Calendar;\nvar _c;\n$RefreshReg$(_c, \"Calendar\");","map":{"version":3,"names":["React","useState","Link","logo","jsxDEV","_jsxDEV","Calendar","_s","currentYear","setCurrentYear","currentMonth","setCurrentMonth","daysInMonth","Date","getDate","firstDayOfMonth","getDay","calendarDays","i","push","date","handleNextMonth","handlePrevMonth","monthNames","currentMonthName","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","map","day","index","_c","$RefreshReg$"],"sources":["/Users/ssutthiboriban/Desktop/cs411/cs411/fa24-cs411-team033-TT/client/src/Calendar.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport './styles/Calendar.css';\nimport logo from \"./logo.png\";\n\nconst Calendar = () => {\n  const [currentYear, setCurrentYear] = useState(2025); // State for the year\n  const [currentMonth, setCurrentMonth] = useState(9); // State for the month (October is 9)\n\n  // Helper function to get the number of days in the current month\n  const daysInMonth = new Date(currentYear, currentMonth + 1, 0).getDate();\n  // Get the day of the week for the first day of the month\n  const firstDayOfMonth = new Date(currentYear, currentMonth, 1).getDay();\n\n  // Create calendar days (placeholders for empty cells and actual days)\n  const calendarDays = [];\n  for (let i = 0; i < firstDayOfMonth; i++) {\n    calendarDays.push({ date: null }); // Empty placeholder\n  }\n  for (let i = 1; i <= daysInMonth; i++) {\n    calendarDays.push({ date: i });\n  }\n\n  // Handle navigation to the next month\n  const handleNextMonth = () => {\n    if (currentMonth === 11) {\n      setCurrentMonth(0); // Go to January\n      setCurrentYear(currentYear + 1); // Increment the year\n    } else {\n      setCurrentMonth(currentMonth + 1); // Go to the next month\n    }\n  };\n\n  // Handle navigation to the previous month\n  const handlePrevMonth = () => {\n    if (currentMonth === 0) {\n      setCurrentMonth(11); // Go to December\n      setCurrentYear(currentYear - 1); // Decrement the year\n    } else {\n      setCurrentMonth(currentMonth - 1); // Go to the previous month\n    }\n  };\n\n  // Format the current month and year for display\n  const monthNames = [\n    \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n    \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n  ];\n  const currentMonthName = monthNames[currentMonth];\n\n  return (\n    <div className=\"closet-container\">\n      {/* Header Section */}\n      <header className=\"closet-header\">\n        <img className=\"logo\" src={logo} alt=\"logo\" />\n        <nav className=\"navigation\">\n          {/* <Link to=\"/closet\" className=\"nav-item\">closet</Link>\n          <Link to=\"/calendar\" className=\"nav-item active\">calendar</Link> */}\n          <span className=\"nav-item\">today outfit</span>\n        </nav>\n      </header>\n\n      {/* Calendar Header with Navigation */}\n      <div className=\"calendar-header\">\n        <button className=\"nav-button\" onClick={handlePrevMonth}>◀</button>\n        <h2>{currentMonthName} {currentYear}</h2>\n        <button className=\"nav-button\" onClick={handleNextMonth}>▶</button>\n      </div>\n\n      {/* Calendar Grid */}\n      <div className=\"calendar-grid\">\n        {['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'].map((day) => (\n          <div key={day} className=\"calendar-day-name\">{day}</div>\n        ))}\n        {calendarDays.map((day, index) => (\n          <div key={index} className={`calendar-day ${day.date ? '' : 'placeholder'}`}>\n            {day.date}\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Calendar;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}